export interface HelpAPI { toggle():void; ensureFab():void; }

const HELP_SECTIONS = [
  { title:'Navigation', items:[ ['Pan','Space + Drag / Middle Mouse Drag'], ['Zoom','Wheel (cursor focus)'], ['Zoom In / Out','Ctrl + (+ / -)'], ['Fit All','F'], ['Fit Selection','Shift+F or Z'], ['Reset Zoom','Ctrl+0'] ]},
  { title:'Selection', items:[ ['Single','Click'], ['Add / Toggle','Shift+Click'], ['Marquee','Drag empty space (Shift = additive)'], ['Select All / Clear','Ctrl+A / Esc'] ]},
  { title:'Cards', items:[ ['Move','Drag'], ['Nudge','Arrow Keys (Shift = 5×)'] ]},
  { title:'Groups', items:[ ['Create','G (around selection) or empty at center'], ['Move','Drag header'], ['Resize','Drag bottom-right handle'], ['Rename','Double-click header or F2'], ['Delete','Del (cards or groups)'], ['Layout','Grid auto-layout'] ]},
  { title:'Help & Misc', items:[ ['Toggle Help','H or ?'], ['Help FAB','Hover / click “?” bottom-right'], ['Recover View','Press F if you get lost'] ]}
];

function buildHelpHTML(){ return `<div class="help-root">${HELP_SECTIONS.map(sec=> `\n      <section><h2>${sec.title}</h2><ul>${sec.items.map(i=> `<li><b>${i[0]}:</b> <span>${i[1]}</span></li>`).join('')}</ul></section>`).join('')}\n      <section class="tips"><h2>Tips</h2><ul><li>Alt disables snapping temporarily.</li><li>Shift while marquee adds to selection.</li><li>Use Fit Selection (Z) to zoom to current work.</li></ul></section>\n    </div>`; }
function ensureHelpStyles(){ if (document.getElementById('help-style')) return; const style=document.createElement('style'); style.id='help-style'; style.textContent=`.help-root{font:12px/1.5 "Inter",system-ui,monospace;padding:2px 0;} .help-root h2{margin:12px 0 4px;font-size:12px;letter-spacing:.6px;text-transform:uppercase;color:#6fb9ff;} .help-root section:first-of-type h2{margin-top:0;} .help-root ul{list-style:none;margin:0;padding:0;} .help-root li{margin:0 0 4px;padding:2px 0;border-bottom:1px solid rgba(255,255,255,0.06);} .help-root li:last-child{border-bottom:none;} .help-root b{color:#fff;font-weight:600;} .help-root span{color:#ddd;} .help-root section{margin-bottom:6px;} .help-root .tips ul li{border-bottom:none;} #help-fab-panel .help-root{padding:0;} #help-fab-panel{scrollbar-width:thin;} #help-fab-panel::-webkit-scrollbar{width:8px;} #help-fab-panel::-webkit-scrollbar-track{background:#141b22;} #help-fab-panel::-webkit-scrollbar-thumb{background:#2f4f62;border-radius:4px;}`; document.head.appendChild(style); }

export function initHelp(): HelpAPI {
  let helpEl: HTMLDivElement | null = null; let helpVisible=false;
  function createHelp() { ensureHelpStyles(); helpEl = document.createElement('div'); helpEl.style.cssText='position:fixed;top:10px;right:10px;width:460px;max-height:70vh;background:#111c;padding:16px 18px;font:12px/1.5 "Inter",system-ui,monospace;color:#eee;border:1px solid #235;border-radius:10px;z-index:9998;overflow:auto;box-shadow:0 4px 14px rgba(0,0,0,0.55);'; helpEl.innerHTML = buildHelpHTML(); document.body.appendChild(helpEl); }
  function toggle() { if (!helpEl) createHelp(); helpVisible=!helpVisible; if (helpEl) helpEl.style.display = helpVisible? 'block':'none'; }
  function ensureFab() { if (document.getElementById('help-fab')) return; const fab = document.createElement('div'); fab.id='help-fab'; fab.style.cssText='position:fixed;bottom:14px;right:14px;width:44px;height:44px;border-radius:50%;background:#264b66;color:#fff;font:24px/44px sans-serif;text-align:center;cursor:help;user-select:none;z-index:9999;box-shadow:0 2px 6px rgba(0,0,0,0.4);'; fab.textContent='?'; fab.title='Help'; const panel = document.createElement('div'); panel.id='help-fab-panel'; panel.style.cssText='position:absolute;bottom:52px;right:0;width:460px;max-height:60vh;display:none;background:#111c;padding:16px 18px;font:12px/1.5 "Inter",system-ui,monospace;color:#eee;border:1px solid #235;border-radius:10px;overflow:auto;box-shadow:0 4px 14px rgba(0,0,0,0.55);'; ensureHelpStyles(); panel.innerHTML = buildHelpHTML(); fab.appendChild(panel); let hover=false; let hideTimer:any=null; function show(){ panel.style.display='block'; } function scheduleHide(){ if (hideTimer) clearTimeout(hideTimer); hideTimer=setTimeout(()=> { if(!hover) panel.style.display='none'; },250);} fab.addEventListener('mouseenter', ()=> { hover=true; show(); }); fab.addEventListener('mouseleave', ()=> { hover=false; scheduleHide(); }); panel.addEventListener('mouseenter', ()=> { hover=true; show(); }); panel.addEventListener('mouseleave', ()=> { hover=false; scheduleHide(); }); let pinned=false; fab.addEventListener('click', e=> { e.stopPropagation(); pinned=!pinned; if (pinned) { show(); panel.style.display='block'; } else { hover=false; scheduleHide(); } }); document.body.appendChild(fab); }
  return { toggle, ensureFab };
}
